@{
	ViewBag.Title = "Chat";
}

<main>
	<h2>Chat</h2>
	<div class="container">
		<input type="text" id="message" />
		<input type="button" id="sendmessage" value="Send" />
		<input type="hidden" id="displayname" />
		<ul id="discussion">
		</ul>
	</div>
</main>
@section scripts{
	<!--Script references. -->
	<!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
	<!--Reference the SignalR library. -->
	<script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>

	<!--Reference the autogenerated SignalR hub script. -->
	@*<script src="~/signalr/hubs"></script>*@
	<script>
		document.addEventListener("DOMContentLoaded", function () {

			// Reference the auto-generated proxy for the hub.

			var connection = $.hubConnection();
			var chat = connection.createHubProxy('ChartHub');

			// Create a function that the hub can call back to display messages.
			chat.on("addNewMessageToPage", function (name, message) {
				// Add the message to the page.
				var discussion = document.getElementById('discussion');
				var listItem = document.createElement('li');
				listItem.innerHTML = '<strong>' + htmlEncode(name) + '</strong>: ' + htmlEncode(message);
				discussion.appendChild(listItem);
			});

			// Get the user name and store it to prepend to messages.
			var displayName = prompt('Enter your name:', '');

			// Set initial focus to message input box.
			var messageInput = document.getElementById('message');
			messageInput.focus();

			// Start the connection.
			connection.start().done(function () {
				document.getElementById('sendmessage').addEventListener('click', function () {
					// Call the Send method on the hub.
					chat.invoke("send", displayName, messageInput.value);
					// Clear text box and reset focus for the next comment.
					messageInput.value = '';
					messageInput.focus();
				});
			}).catch(function (err) {
				return console.error(err.toString());
			});

			// This optional function html-encodes messages for display on the page.
			function htmlEncode(value) {
				var encodedValue = document.createElement('div');
				encodedValue.innerText = value;
				return encodedValue.innerHTML;
			}
		});
		//$(function () {
		//	// Reference the auto-generated proxy for the hub.
		//	var connection = $.hubConnection();
		//	var chat = connection.createHubProxy('ChartHub');
		//	// Create a function that the hub can call back to display messages.
		//	chat.on("addNewMessageToPage", function (name, message) {
		//		// Add the message to the page.
		//		$('#discussion').append('<li><strong>' + htmlEncode(name)
		//			+ '</strong>: ' + htmlEncode(message) + '</li>');
		//	});
		//	// Get the user name and store it to prepend to messages.
		//	$('#displayname').val(prompt('Enter your name:', ''));
		//	// Set initial focus to message input box.
		//	$('#message').focus();
		//	// Start the connection.
		//	$.connection.hub.start().done(function () {
		//		$('#sendmessage').click(function () {
		//			// Call the Send method on the hub.
		//			chat.invoke("send", $('#message').val());
		//			// Clear text box and reset focus for next comment.
		//			$('#message').val('').focus();
		//		});
		//	});
		//});
		//// This optional function html-encodes messages for display in the page.
		//function htmlEncode(value) {
		//	var encodedValue = $('<div />').text(value).html();
		//	return encodedValue;
		//}
	</script>
}